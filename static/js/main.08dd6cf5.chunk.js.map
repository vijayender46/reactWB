{"version":3,"sources":["videos/home-bg.mp4","Home.jsx","FindDestination.jsx","About.jsx","ContactUs.jsx","Navbar.jsx","App.js","serviceWorker.js","index.js","images/logo-wanderer.svg"],"names":["module","exports","Home","className","src","Wblogo","alt","autoPlay","muted","loop","id","Videobg","type","FindDestination","About","ContactUs","Navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,qNC2B3BC,EAvBF,WACT,OACI,oCACK,yBAAKC,UAAU,uCAEhB,yBAAKA,UAAU,aACZ,yBAAKC,IAAKC,IAAQC,IAAI,oBAEtB,kGAKH,yBAAKH,UAAU,kBACf,2BAAOI,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACC,GAAG,WAC5B,4BAAQN,IAAKO,IAASC,KAAK,iBCN3BC,EAXS,WACpB,OACI,oCACK,kECQEC,EAXD,WACV,OACI,oCACK,uDCQEC,EAXG,WACd,OACI,oCACK,yD,OCmDEC,EApDA,WACX,OACI,oCAEI,yBAAKb,UAAU,uBAEX,yBAAKA,UAAU,wCACX,kBAAC,IAAD,CAASA,UAAU,eAAec,GAAG,SAAQ,yBAAKb,IAAKC,IAAQC,IAAI,qBACnE,4BAAQH,UAAU,iBAAiBS,KAAK,SAASM,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAMnB,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BO,GAAG,0BACzC,wBAAIP,UAAU,sBACd,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAASA,UAAU,WAAWc,GAAG,KAAjC,QAA0C,0BAAMd,UAAU,WAAhB,eAE1C,wBAAIA,UAAU,qBACV,kBAAC,IAAD,CAASA,UAAU,2BAA2Bc,GAAG,mBAAmBP,GAAG,iBAAiBa,KAAK,SAASL,cAAY,WAAWM,gBAAc,OAAOH,gBAAc,SAAhK,mBAGJ,yBAAKlB,UAAU,gBAAgBsB,kBAAgB,kBAC3C,kBAAC,IAAD,CAAStB,UAAU,gBAAgBc,GAAG,oBAAtC,iBACA,kBAAC,IAAD,CAASd,UAAU,gBAAgBc,GAAG,oBAAtC,cACJ,yBAAKd,UAAU,qBACX,kBAAC,IAAD,CAASA,UAAU,gBAAgBc,GAAG,oBAAtC,0BAGR,wBAAId,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWc,GAAG,UAAjC,UAEJ,wBAAId,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWc,GAAG,cAAjC,qB,OCNbS,EAhBH,WACV,OACA,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAc3B,IACpC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,mBAAmBC,UAAchB,IACnD,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,SAASC,UAAcf,IACzC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,aAAaC,UAAcd,IAC7C,kBAAC,IAAD,CAAUE,GAAG,SCXCa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,oCACE,kBAAC,IAAD,KACC,kBAAC,EAAD,QAGHC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BhD,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.08dd6cf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-bg.729b5dd0.mp4\";"," import React from 'react';\r\n import Videobg from '../src/videos/home-bg.mp4'; \r\n import Wblogo from '../src/images/logo-wanderer.svg';\r\n\r\n const Home = () => {\r\n     return(\r\n         <>\r\n              <div className=\"container pt-5 homePage text-center\">\r\n\r\n             <div className=\"brandHome\">\r\n                <img src={Wblogo} alt=\"Wanderer Bucket\" />\r\n\r\n                <h1>“Never let your memories be greater than your dreams.”</h1>\r\n            </div>\r\n \r\n                    \r\n              </div>\r\n             <div className=\"videoBackdrop\"></div>   \r\n             <video autoPlay muted loop id=\"myVideo\">\r\n               <source src={Videobg} type=\"video/mp4\" />\r\n            </video>\r\n         </>\r\n\r\n     )\r\n }\r\n \r\n\r\n export default Home;","import React from 'react';\r\n\r\nconst FindDestination = () => {\r\n    return(\r\n        <>\r\n             <h1>Welcome to Find Destination Page</h1>   \r\n             \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FindDestination;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return(\r\n        <>\r\n             <h1>Welcome to About Page</h1>  \r\n \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst ContactUs = () => {\r\n    return(\r\n        <>\r\n             <h1>Welcome to Contact Page</h1>  \r\n         \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ContactUs;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Wblogo from '../src/images/logo-wanderer.svg';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <>         \r\n\r\n            <div className=\"container wb-navbar\">                  \r\n                    \r\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/Home\"><img src={Wblogo} alt=\"Wanderer Bucket\" /></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n                        </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <NavLink className=\"nav-link dropdown-toggle\" to=\"/FindDestination\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Explore Destiny\r\n                                </NavLink>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <NavLink className=\"dropdown-item\" to=\"/FindDestination\">Epic Trekking</NavLink>\r\n                                <NavLink className=\"dropdown-item\" to=\"/FindDestination\">Epic Roads</NavLink>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                                <NavLink className=\"dropdown-item\" to=\"/FindDestination\">Ancient Architecture</NavLink>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/About\">About</NavLink>                            \r\n                        </li>\r\n                        <li className=\"nav-item\">                             \r\n                            <NavLink className=\"nav-link\" to=\"/ContactUs\">Contact Us</NavLink>\r\n                        </li>\r\n                        \r\n                         \r\n                        </ul>\r\n                         \r\n                    </div>\r\n                    </nav>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                   \r\n\r\n                </div> \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\n// import logo from './logo.svg';\n// import $ from \"jquery\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport './App.css';\nimport Home from './Home';\nimport FindDestination from './FindDestination';\nimport About from './About';\nimport ContactUs from './ContactUs';\nimport Navbar from './Navbar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n \n\nconst App = () => {\n  return (\n  <>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/\" component = { Home } />\n      <Route exact path=\"/FindDestination\" component = { FindDestination } />\n      <Route exact path=\"/About\" component = { About } />\n      <Route exact path=\"/ContactUs\" component = { ContactUs } />\n      <Redirect to=\"/\" />\n    </Switch>\n  </>\n     \n  )\n}\n\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n//import Demo from './Demo'; // Custom Demo built component 1\n//import Avatar from './Avatar';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n     <App />     \n     </BrowserRouter>\n  </>,\n  document.getElementById('root') \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-wanderer.31b735d8.svg\";"],"sourceRoot":""}